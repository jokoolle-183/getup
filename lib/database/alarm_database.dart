import 'package:drift/drift.dart';
import 'package:drift_flutter/drift_flutter.dart';

part 'alarm_database.g.dart'; // This will be generated by drift

@DataClassName('DbAlarm')
class Alarms extends Table {
  IntColumn get id => integer().autoIncrement()();
  TextColumn get name => text().nullable()();
  DateTimeColumn get time => dateTime()();
  IntColumn get snoozeDuration => integer()();
  TextColumn get daysOfWeek =>
      text()(); // Storing as comma-separated days (e.g., Mon,Tue,Wed)
}

@DataClassName('AlarmSet')
class AlarmSets extends Table {
  IntColumn get id => integer().autoIncrement()();
  TextColumn get name => text().nullable()();
  DateTimeColumn get startTime => dateTime()();
  DateTimeColumn get endTime => dateTime()();
  IntColumn get intervalBetweenAlarms => integer()();
  IntColumn get pauseDuration => integer().nullable()();
  TextColumn get daysOfWeek => text()(); // Active days for the entire alarm set
}

class AlarmSetAlarms extends Table {
  IntColumn get alarmSetId => integer().references(
        AlarmSets,
        #id,
        onDelete: KeyAction.cascade,
      )();
  IntColumn get alarmId => integer().references(
        Alarms,
        #id,
        onDelete: KeyAction.cascade,
      )();

  @override
  Set<Column> get primaryKey => {alarmSetId, alarmId};
}

@DriftDatabase(tables: [Alarms, AlarmSets, AlarmSetAlarms])
class AlarmDatabase extends _$AlarmDatabase {
  AlarmDatabase() : super(_openConnection());

  static QueryExecutor _openConnection() {
    // `driftDatabase` from `package:drift_flutter` stores the database in
    // `getApplicationDocumentsDirectory()`.
    return driftDatabase(name: 'alarm_database');
  }

  Future<List<DbAlarm>> get allAlarms => select(alarms).get();

  @override
  int get schemaVersion => 1;
}
